{"version":3,"sources":["sortingAlgorithms/bubbleSort.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/insertionSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","App.js","index.js"],"names":["BubbleSort","isSorting","sortingChange","isSorted","isArraySorted","sortingSpeed","disabled","onClick","node","document","querySelector","counter","task","j","a","timer","getElementById","innerHTML","children","style","background","parseFloat","height","insertBefore","ms","Promise","res","setTimeout","k","childNodes","length","SelectionSort","minIdx","swapItemsDelay","i","swapElements","opacity","visualizeProgressDelay","element1","element2","parentNode","InsertionSort","count","el","cloneNode","MergeSort","array","changeColor","arrayBars","animations","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","backgroundColor","changeHeight","newHeight","getMergeSortAnimations","getElementsByClassName","helperArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","doMerge","push","QuickSort","initialSortedArray","forEach","sort","b","partition","arr","pivot","left","right","pivotValue","partitionIndex","swap","arraysEqual","arr1","arr2","actualArr","all","quickSort","App","props","value","state","setState","handleColumnsAmountChange","event","columnsAmount","target","stepCounterRef","current","amountNumRef","querySelectorAll","randomizeColumns","handleSortingSpeedChange","round","random","sortingSpeedNumRef","React","createRef","sortingSpeedRef","this","className","type","id","onChange","name","min","max","ref","htmlFor","step","defaultValue","map","idx","key","width","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.59202c1a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction BubbleSort({\n  isSorting,\n  sortingChange,\n  isSorted,\n  isArraySorted,\n  sortingSpeed\n}) {\n  const bubbleSort = () => {\n    if (!isSorted) {\n      sortingChange();\n    }\n    let node = document.querySelector(\".App-container\");\n    let counter = 0;\n\n    async function task(j) {\n      await timer(200 / sortingSpeed);\n      document.getElementById(\"stepCounter\").innerHTML = counter++;\n      if (j >= 1) {\n        node.children[j - 1].style.background = \"#E6F4F1\";\n      }\n      if (\n        parseFloat(node.children[j].style.height) >\n        parseFloat(node.children[j + 1].style.height)\n      ) {\n        node.insertBefore(node.children[j + 1], node.children[j]);\n        node.children[j].style.background = \"#159957\";\n        node.children[j + 1].style.background = \"#159957\";\n      } else {\n        node.children[j].style.background = \"#832700\";\n        node.children[j + 1].style.background = \"#832700\";\n      }\n    }\n\n    (async function bubbleSort() {\n      if (!isSorted) {\n        for (let k = 0; k < node.childNodes.length; k++) {\n          for (let j = 0; j < node.childNodes.length - k - 1; j++) {\n            await task(j);\n          }\n          if (k < node.childNodes.length - 1) {\n            node.children[node.childNodes.length - 2 - k].style.background =\n              \"#E6F4F1\";\n          }\n          node.children[node.childNodes.length - 1 - k].style.background =\n            \"#159957\";\n        }\n        isArraySorted();\n        sortingChange();\n      }\n    })();\n\n    function timer(ms) {\n      return new Promise(res => setTimeout(res, ms));\n    }\n  };\n  return (\n    <button disabled={isSorting} onClick={bubbleSort}>\n      Bubble sort\n    </button>\n  );\n}\n\nexport default BubbleSort;\n","import React from \"react\";\n\nfunction SelectionSort({\n  isSorting,\n  sortingChange,\n  isSorted,\n  isArraySorted,\n  sortingSpeed\n}) {\n  const selectionSort = () => {\n    if (!isSorted) {\n      sortingChange();\n    }\n    let node = document.querySelector(\".App-container\");\n    let counter = 0;\n    let minIdx;\n\n    (async function selectionSort() {\n      if (!isSorted) {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          minIdx = i;\n          for (let j = i + 1; j < node.childNodes.length; j++) {\n            await visualizeProgressDelay(j);\n            if (\n              parseFloat(node.children[j].style.height) <\n              parseFloat(node.children[minIdx].style.height)\n            ) {\n              node.children[j].style.background = \"#159957\";\n              node.children[minIdx].style.background = \"#e6f4f1\";\n              minIdx = j;\n            }\n            document.getElementById(\"stepCounter\").innerHTML = counter++;\n          }\n          await swapItemsDelay(i, minIdx);\n        }\n        isArraySorted();\n        sortingChange();\n      }\n    })();\n\n    async function swapItemsDelay(i, minIdx) {\n      await timer(200 / sortingSpeed);\n      swapElements(node.children[i], node.children[minIdx]);\n      node.children[i].style.background = \"#159957\";\n      node.children[i].style.opacity = \"1\";\n      node.children[node.childNodes.length - 1].style.opacity = \"1\";\n    }\n    async function visualizeProgressDelay(j) {\n      await timer(200 / sortingSpeed);\n      if (j >= 1) {\n        node.children[j - 1].style.opacity = \"1\";\n      }\n      node.children[j].style.opacity = \"0.5\";\n    }\n\n    function timer(ms) {\n      return new Promise(res => setTimeout(res, ms));\n    }\n\n    const swapElements = (element1, element2) => {\n      if (element1 !== element2) {\n        element1.parentNode.insertBefore(element2, element1);\n      }\n    };\n  };\n\n  return (\n    <button disabled={isSorting} onClick={selectionSort}>\n      Selection sort\n    </button>\n  );\n}\n\nexport default SelectionSort;\n","import React from \"react\";\n\nfunction InsertionSort({\n  isSorting,\n  sortingChange,\n  isSorted,\n  isArraySorted,\n  sortingSpeed\n}) {\n  const insertionSort = () => {\n    if (!isSorted) {\n      sortingChange();\n    }\n    let node = document.querySelector(\".App-container\");\n    let counter = 0;\n\n    async function task(j) {\n      await timer(200 / sortingSpeed);\n      document.getElementById(\"stepCounter\").innerHTML = counter++;\n      node.insertBefore(node.children[j + 1], node.children[j]);\n      node.children[j].style.background = \"#159957\";\n    }\n    let count = 0;\n    (async function insertionSort() {\n      if (!isSorted) {\n        for (let i = 1; i < node.childNodes.length; i++) {\n          node.children[i].style.background = \"#159957\";\n          let el = node.children[i];\n          let j;\n          for (\n            j = i - 1;\n            j >= 0 &&\n            parseFloat(node.children[j].style.height) >\n              parseFloat(el.style.height);\n            j--\n          ) {\n            await task(j);\n          }\n          node.cloneNode(node.children[j + 1], el);\n          node.children[count].style.background = \"#159957\";\n          count++;\n        }\n        isArraySorted();\n        sortingChange();\n      }\n    })();\n\n    function timer(ms) {\n      return new Promise(res => setTimeout(res, ms));\n    }\n  };\n\n  return (\n    <button disabled={isSorting} onClick={insertionSort}>\n      Insertion sort\n    </button>\n  );\n}\n\nexport default InsertionSort;\n","import React from \"react\";\r\n\r\nfunction MergeSort({\r\n  isSorting,\r\n  sortingChange,\r\n  isSorted,\r\n  isArraySorted,\r\n  sortingSpeed,\r\n  array\r\n}) {\r\n  let counter = 0;\r\n\r\n  async function changeColor(arrayBars, animations, i) {\r\n    await timer(200 / sortingSpeed);\r\n    const [barOneIdx, barTwoIdx] = animations[i];\r\n    const barOneStyle = arrayBars[barOneIdx].style;\r\n    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n    const color = i % 3 === 0 ? \"#832700\" : \"#159957\";\r\n    barOneStyle.backgroundColor = color;\r\n    barTwoStyle.backgroundColor = color;\r\n  }\r\n\r\n  async function changeHeight(arrayBars, animations, i) {\r\n    await timer(200 / sortingSpeed);\r\n    const [barOneIdx, newHeight] = animations[i];\r\n    const barOneStyle = arrayBars[barOneIdx].style;\r\n    barOneStyle.height = `${newHeight}%`;\r\n  }\r\n\r\n  function timer(ms) {\r\n    return new Promise(res => setTimeout(res, ms));\r\n  }\r\n\r\n  async function mergeSorting() {\r\n    // if (!isSorted) {\r\n    //   sortingChange(true);\r\n    // }\r\n\r\n    const animations = await getMergeSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      document.getElementById(\"stepCounter\").innerHTML = counter++;\r\n      const arrayBars = document.getElementsByClassName(\"Container-column\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        await changeColor(arrayBars, animations, i);\r\n      } else {\r\n        await changeHeight(arrayBars, animations, i);\r\n      }\r\n    }\r\n\r\n    // isArraySorted();\r\n    // sortingChange(false);\r\n  }\r\n\r\n  async function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const helperArray = array.slice();\r\n    await mergeSortHelper(array, 0, array.length - 1, helperArray, animations);\r\n    return animations;\r\n  }\r\n\r\n  async function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    helperArray,\r\n    animations\r\n  ) {\r\n    if (startIdx === endIdx) {\r\n      return;\r\n    }\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    await mergeSortHelper(\r\n      helperArray,\r\n      startIdx,\r\n      middleIdx,\r\n      mainArray,\r\n      animations\r\n    );\r\n    await mergeSortHelper(\r\n      helperArray,\r\n      middleIdx + 1,\r\n      endIdx,\r\n      mainArray,\r\n      animations\r\n    );\r\n    await doMerge(\r\n      mainArray,\r\n      startIdx,\r\n      middleIdx,\r\n      endIdx,\r\n      helperArray,\r\n      animations\r\n    );\r\n  }\r\n\r\n  async function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    helperArray,\r\n    animations\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      animations.push([i, j]);\r\n      animations.push([i, j]);\r\n      if (helperArray[i] <= helperArray[j]) {\r\n        animations.push([k, helperArray[i]]);\r\n        mainArray[k++] = helperArray[i++];\r\n      } else {\r\n        animations.push([k, helperArray[j]]);\r\n        mainArray[k++] = helperArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      animations.push([i, i]);\r\n      animations.push([i, i]);\r\n      animations.push([k, helperArray[i]]);\r\n      mainArray[k++] = helperArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      animations.push([j, j]);\r\n      animations.push([j, j]);\r\n      animations.push([k, helperArray[j]]);\r\n      mainArray[k++] = helperArray[j++];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button disabled={isSorting} onClick={mergeSorting}>\r\n      Merge sort\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default MergeSort;\r\n","import React from \"react\";\r\n\r\nfunction QuickSort({\r\n  isSorting,\r\n  sortingChange,\r\n  isSorted,\r\n  isArraySorted,\r\n  sortingSpeed\r\n}) {\r\n  const quickSorting = () => {\r\n    if (!isSorted) {\r\n      sortingChange(true);\r\n    }\r\n    let node = document.querySelector(\".App-container\");\r\n\r\n    const initialSortedArray = [];\r\n    node.childNodes.forEach(el =>\r\n      initialSortedArray.push(parseFloat(el.style.height))\r\n    );\r\n    initialSortedArray.sort((a, b) => a - b);\r\n\r\n    let counter = 0;\r\n\r\n    (async function quickSort(arr, left, right) {\r\n      var pivot, partitionIndex;\r\n\r\n      const actualArr = [];\r\n\r\n      arr.childNodes.forEach(el => actualArr.push(parseFloat(el.style.height)));\r\n\r\n      if (arraysEqual(actualArr, initialSortedArray)) {\r\n        isArraySorted();\r\n        sortingChange(false);\r\n        return;\r\n      }\r\n\r\n      if (left < right) {\r\n        pivot = right;\r\n        partitionIndex = await partition(arr, pivot, left, right);\r\n\r\n        await Promise.all([\r\n          quickSort(arr, left, partitionIndex - 1),\r\n          quickSort(arr, partitionIndex + 1, right)\r\n        ]);\r\n      }\r\n\r\n      for (let i = 0; i < arr.childNodes.length; i++) {\r\n        arr.children[i].style.background = \"#159957\";\r\n      }\r\n\r\n      return arr;\r\n    })(node, 0, node.childNodes.length - 1);\r\n\r\n    async function partition(arr, pivot, left, right) {\r\n      var pivotValue = arr.children[pivot],\r\n        partitionIndex = left;\r\n      arr.children[pivot].style.background = \"blue\";\r\n      for (var i = left; i < right; i++) {\r\n        if (\r\n          parseFloat(arr.children[i].style.height) <\r\n          parseFloat(pivotValue.style.height)\r\n        ) {\r\n          await swap(arr, i, partitionIndex);\r\n          arr.children[i].style.background = \"#159957\";\r\n\r\n          partitionIndex++;\r\n        }\r\n        document.getElementById(\"stepCounter\").innerHTML = counter++;\r\n      }\r\n      arr.children[pivot].style.background = \"#e6f4f1\";\r\n      await swap(arr, right, partitionIndex);\r\n      return partitionIndex;\r\n    }\r\n\r\n    async function swap(arr, i, j) {\r\n      await timer(200 / sortingSpeed);\r\n      arr.insertBefore(arr.children[i], arr.children[j]);\r\n    }\r\n\r\n    function timer(ms) {\r\n      return new Promise(res => setTimeout(res, ms));\r\n    }\r\n\r\n    function arraysEqual(arr1, arr2) {\r\n      if (arr1.length !== arr2.length) return false;\r\n      for (var i = arr1.length; i--; ) {\r\n        if (arr1[i] !== arr2[i]) return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button disabled={isSorting} onClick={quickSorting}>\r\n      Quick sort\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default QuickSort;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport BubbleSort from \"./sortingAlgorithms/bubbleSort\";\nimport SelectionSort from \"./sortingAlgorithms/selectionSort\";\nimport InsertionSort from \"./sortingAlgorithms/insertionSort\";\nimport MergeSort from \"./sortingAlgorithms/mergeSort\";\nimport QuickSort from \"./sortingAlgorithms/quickSort\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      sortingSpeed: 0,\n      columnsAmount: 50,\n      isSorting: false,\n      isSorted: false\n    };\n    this.sortingSpeedNumRef = React.createRef();\n    this.sortingSpeedRef = React.createRef();\n    this.amountNumRef = React.createRef();\n    this.stepCounterRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.randomizeColumns();\n    this.sortingSpeedNumRef.current.innerHTML = `Sorting interval: ${Math.round(\n      (200 / this.sortingSpeedRef.current.value) * 10\n    ) / 10}\n      ms`;\n\n    this.setState({ sortingSpeed: this.sortingSpeedRef.current.value });\n    this.amountNumRef.current.innerHTML = `Amount of columns:  ${this.state.columnsAmount}`;\n  }\n\n  sortingChange = (value = !this.state.isSorting) => {\n    this.setState({ isSorting: value });\n  };\n\n  isArraySorted = () => {\n    this.setState({ isSorted: true });\n  };\n\n  handleColumnsAmountChange = event => {\n    this.setState({ columnsAmount: event.target.value });\n    this.stepCounterRef.current.innerHTML = \"0\";\n    this.amountNumRef.current.innerHTML = `Amount of columns:  ${this.state.columnsAmount}`;\n\n    document\n      .querySelectorAll(\".Container-column\")\n      .forEach(node => (node.style.backgroundColor = \"#ededed\"));\n\n    this.randomizeColumns();\n  };\n\n  handleSortingSpeedChange = event => {\n    this.setState({ sortingSpeed: event.target.value });\n\n    document.getElementById(\"sortingSpeedNumber\").innerHTML =\n      \"Sorting interval: \" +\n      Math.round((200 / event.target.value) * 10) / 10 +\n      \"ms\";\n  };\n\n  randomizeColumns = () => {\n    this.setState({ isSorting: false });\n    this.setState({ isSorted: false });\n\n    const array = [];\n    for (let i = 0; i < this.state.columnsAmount; i++) {\n      array.push(Math.random() * 99 + 1);\n    }\n    this.setState({ array });\n\n    this.stepCounterRef.current.innerHTML = \"0\";\n    this.amountNumRef.current.innerHTML = `Amount of columns:  ${this.state.columnsAmount}`;\n  };\n\n  render() {\n    const { array } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-header__settings\">\n            <span>\n              <input\n                type=\"range\"\n                id=\"sortingSize\"\n                onChange={this.handleColumnsAmountChange}\n                name=\"columnAmount\"\n                min=\"4\"\n                max=\"300\"\n                disabled={this.state.isSorting}\n              />\n              <label\n                ref={this.amountNumRef}\n                id=\"amountNumber\"\n                htmlFor=\"columnAmount\"\n              >\n                Amount of columns:\n              </label>\n            </span>\n            <span>\n              <input\n                type=\"range\"\n                id=\"sortingSpeed\"\n                ref={this.sortingSpeedRef}\n                name=\"sortingSpeed\"\n                onChange={this.handleSortingSpeedChange}\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                defaultValue=\"4\"\n                disabled={this.state.isSorting}\n              />\n              <label\n                ref={this.sortingSpeedNumRef}\n                id=\"sortingSpeedNumber\"\n                htmlFor=\"sortingSpeed\"\n              >\n                Sorting interval:\n              </label>\n            </span>\n          </div>\n          <div className=\"step-counter\">\n            <p>Steps: </p>\n            <span ref={this.stepCounterRef} id=\"stepCounter\">\n              0\n            </span>\n          </div>\n          <div className=\"App-header__algorithms\">\n            <BubbleSort\n              sortingSpeed={this.state.sortingSpeed}\n              isSorting={this.state.isSorting}\n              sortingChange={this.sortingChange}\n              isSorted={this.state.isSorted}\n              isArraySorted={this.isArraySorted}\n            />\n            <SelectionSort\n              sortingSpeed={this.state.sortingSpeed}\n              isSorting={this.state.isSorting}\n              sortingChange={this.sortingChange}\n              isSorted={this.state.isSorted}\n              isArraySorted={this.isArraySorted}\n            />\n            <InsertionSort\n              sortingSpeed={this.state.sortingSpeed}\n              isSorting={this.state.isSorting}\n              sortingChange={this.sortingChange}\n              isSorted={this.state.isSorted}\n              isArraySorted={this.isArraySorted}\n            />\n            <QuickSort\n              sortingSpeed={this.state.sortingSpeed}\n              isSorting={this.state.isSorting}\n              sortingChange={this.sortingChange}\n              isSorted={this.state.isSorted}\n              isArraySorted={this.isArraySorted}\n            />\n            <MergeSort\n              sortingSpeed={this.state.sortingSpeed}\n              isSorting={this.state.isSorting}\n              sortingChange={this.sortingChange}\n              isSorted={this.state.isSorted}\n              isArraySorted={this.isArraySorted}\n              array={this.state.array}\n            />\n          </div>\n        </header>\n        <section className=\"App-container\">\n          {array.map((value, idx) => (\n            <div\n              className=\"Container-column\"\n              key={idx}\n              style={{\n                backgroundColor: \"#E6F4F1\",\n                height: `${value}%`,\n                width: `calc(100% / ${this.state.columnsAmount})`\n              }}\n            ></div>\n          ))}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}